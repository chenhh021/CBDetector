(cross.language.Demo.FileInfo.$serializer$cross.language.parser.FileParserJava-cross.language.parser.FileParserJava.Listener CSharpParser.Switch_labelContext/CSharpParser.Remove_accessor_declarationContext#CSharpParser.Using_directiveContext"CSharpParser.And_expressionContext*CSharpParser.Select_or_group_clauseContextCSharpParser.AttributesContext!CSharpParser.Argument_listContext,CSharpParser.Primary_expression_startContext"CSharpParser.Switch_sectionContextCSharpParser.Right_shiftContext0CSharpParser.Anonymous_function_signatureContextCSharpParser.BodyContext,CSharpParser.Global_attribute_sectionContext"CSharpParser.UsingStatementContextCSharpParser.DoStatementContext0CSharpParser.Interface_member_declarationContext(CSharpParser.All_member_modifiersContext-CSharpParser.Multiplicative_expressionContext(CSharpParser.Operator_declarationContext&CSharpParser.Query_continuationContext)CSharpParser.Formal_parameter_listContext+CSharpParser.Constructor_declarationContext#CSharpParser.ReturnStatementContext$CSharpParser.ForeachStatementContext'CSharpParser.Interface_type_listContext(CSharpParser.Constant_declarationContext-CSharpParser.AnonymousMethodExpressionContext/CSharpParser.Event_accessor_declarationsContext"CSharpParser.Attribute_listContext'CSharpParser.ExpressionStatementContext#CSharpParser.For_initializerContext)CSharpParser.Accessor_declarationsContext(CSharpParser.DeclarationStatementContext*CSharpParser.Qualified_alias_memberContextCSharpParser.ExpressionContext+CSharpParser.Constructor_initializerContext2CSharpPreprocessorParser.PreprocessorPragmaContext CSharpPreprocessorParserListener&CSharpParser.Primary_constraintContext+CSharpParser.UsingNamespaceDirectiveContextCSharpParser.Return_typeContext-CSharpParser.Conditional_or_expressionContext-CSharpParser.Local_variable_declaratorContext/CSharpParser.Generic_dimension_specifierContext$CSharpParser.Query_expressionContext$CSharpParser.CheckedStatementContext9CSharpParser.Explicit_anonymous_function_parameterContextCSharpParser.OrderingContext,CSharpParser.Class_member_declarationContextCSharpLexer"CSharpParser.Interface_baseContext(CSharpParser.Variable_initializerContext'CSharpParser.Local_function_bodyContextCSharpParser.Enum_baseContext%CSharpParser.Array_initializerContext$CSharpParser.Class_definitionContext'CSharpParser.Floating_point_typeContext(CSharpParser.Qualified_identifierContext*CSharpParser.Right_shift_assignmentContext#CSharpParser.SwitchStatementContext+CSharpParser.Member_initializer_listContext;CSharpPreprocessorParser.Directive_new_line_or_sharpContext(CSharpParser.SimpleNameExpressionContext%CSharpParser.LiteralExpressionContext'CSharpParser.Variable_declaratorContext)CSharpParser.Namespace_declarationContext1CSharpParser.Interpolated_verbatium_stringContext-CSharpParser.Simple_embedded_statementContext%CSharpParser.Switch_expressionContext)CSharpParser.Relational_expressionContext%CSharpParser.Event_declarationContext(CSharpParser.Interface_definitionContext%CSharpParser.Unbound_type_nameContext(CSharpParser.Constant_declaratorsContext/CSharpParser.Variant_type_parameter_listContextCSharpParserBaseListener(CSharpParser.Combined_join_clauseContext#parsers.java.JavaParserBaseListener"CSharpParser.YieldStatementContext,CSharpParser.Typed_member_declarationContext%CSharpParser.Accessor_modifierContext&CSharpParser.Bracket_expressionContext)CSharpParser.Overloadable_operatorContext*CSharpParser.ParenthesisExpressionsContext*CSharpParser.Member_declarator_listContextCSharpParser.ArgumentContext+CSharpParser.Inclusive_or_expressionContext%CSharpParser.CheckedExpressionContext2CSharpParser.Interpolated_string_expressionContext$CSharpParser.NameofExpressionContext$CSharpParser.Using_directivesContext#CSharpParser.Expression_listContext+CSharpParser.LiteralAccessExpressionContextparsers.java.JavaParserListener"CSharpParser.Statement_listContextCSharpParser.Enum_bodyContext%CSharpParser.Member_declaratorContextCSharpParser.Let_clauseContext-CSharpParser.Fixed_pointer_initializerContextCSharpParser.IdentifierContext,CSharpParser.Local_function_modifiersContextCSharpParser.Base_typeContextCSharpParser.Simple_typeContextCSharpParser.LiteralContext2CSharpPreprocessorParser.PreprocessorRegionContext%CSharpParser.Initializer_valueContext,CSharpParser.Set_accessor_declarationContext CSharpParser.For_iteratorContext.CSharpParser.Null_coalescing_expressionContext)CSharpParser.Switch_expression_armContext CSharpParser.ForStatementContext%CSharpParser.Method_invocationContextCSharpParser.Query_bodyContext!CSharpParser.Catch_clausesContext1CSharpParser.Namespace_member_declarationsContextCSharpParser.AssignmentContext#CSharpParser.Cast_expressionContext$CSharpParser.Throw_expressionContext.CSharpParser.Conditional_and_expressionContext(CSharpParser.Property_declarationContext.CSharpParser.Object_creation_expressionContextCSharpParser.BlockContext)CSharpParser.Secondary_constraintsContext$CSharpPreprocessorParserBaseListener CSharpParser.Numeric_typeContext/parsers.java.JavaParser.FormalParametersContext"CSharpParser.Interface_bodyContext&CSharpParser.UncheckedStatementContext(CSharpParser.Resource_acquisitionContext$CSharpParser.Shift_expressionContextCSharpLexerBase'CSharpParser.Equality_expressionContext%CSharpParser.Lambda_expressionContext,CSharpParser.Get_accessor_declarationContextCSharpParser.AttributeContext)parsers.java.JavaParser.ExpressionContext-CSharpParser.Common_member_declarationContext$CSharpParser.Indexer_argumentContext(CSharpParser.Throwable_expressionContext*CSharpParser.Variant_type_parameterContext!CSharpParser.Member_accessContext/parsers.java.JavaParser.ClassDeclarationContext#CSharpParser.Fixed_parameterContext)CSharpParser.Destructor_definitionContext,CSharpParser.Fixed_pointer_declaratorContext"CSharpParser.WhileStatementContext%CSharpParser.Field_declarationContext0CSharpParser.Namespace_member_declarationContextCSharpParser.Class_bodyContext!CSharpParser.Integral_typeContextCSharpParser.Class_typeContext6CSharpParser.Type_parameter_constraints_clausesContext)CSharpParser.Specific_catch_clauseContext"CSharpParser.FixedStatementContext6CSharpPreprocessorParser.PreprocessorDiagnosticContext&CSharpParser.Member_initializerContextCSharpParserListener*CSharpParser.DefaultValueExpressionContext*CSharpParser.Stackalloc_initializerContext&CSharpParser.Object_initializerContext"CSharpParser.Namespace_bodyContext4CSharpParser.Interpolated_regular_string_partContext'CSharpParser.UsingAliasDirectiveContextCSharpParser.Class_baseContextCSharpParser.Case_guardContextparsers.java.JavaParser"CSharpParser.String_literalContextCSharpParser.IsTypeContext/CSharpParser.Interpolated_regular_stringContext*CSharpParser.MemberAccessExpressionContext CSharpParser.TryStatementContextCSharpParserBase,CSharpParser.ObjectCreationExpressionContext-CSharpParser.Fixed_pointer_declaratorsContext0CSharpPreprocessorParser.PreprocessorLineContext4CSharpParser.Object_or_collection_initializerContextCSharpPreprocessorParser-CSharpParser.Struct_member_declarationContext$CSharpParser.IsTypePatternArmContext'CSharpParser.Local_variable_typeContext"CSharpParser.BreakStatementContext*CSharpParser.Conditional_expressionContext2CSharpParser.Conversion_operator_declaratorContext"CSharpParser.Orderby_clauseContext'CSharpParser.Type_parameter_listContextCSharpParser.Struct_bodyContext%CSharpParser.IsTypePatternArmsContextCSharpParser.Method_bodyContext'CSharpParser.Indexer_declarationContext#CSharpParser.Enum_definitionContext*CSharpParser.Switch_expression_armsContext$CSharpParser.SizeofExpressionContext.CSharpParser.Local_variable_initializerContext$CSharpParser.Unary_expressionContext#CSharpParser.TupleExpressionContext'CSharpParser.Constant_declaratorContext&CSharpParser.Type_argument_listContext6CSharpPreprocessorParser.Preprocessor_directiveContext%CSharpParser.Struct_definitionContext+CSharpParser.Anonymous_function_bodyContext$CSharpParser.Exception_filterContext&CSharpParser.Embedded_statementContext'CSharpParser.Variance_annotationContext'CSharpParser.Additive_expressionContext*CSharpParser.Collection_initializerContext CSharpParser.Pointer_typeContext'CSharpParser.Element_initializerContext.CSharpParser.Local_variable_declarationContextCSharpParser.Tuple_typeContext)parsers.java.JavaParser.IdentifierContext CSharpParser.Where_clauseContext'CSharpParser.Delegate_definitionContext"CSharpParser.ThrowStatementContext*CSharpParser.Constructor_constraintContext+CSharpParser.Exclusive_or_expressionContext!CSharpParser.Accessor_bodyContext#CSharpParser.UnsafeStatementContext&CSharpParser.Attribute_argumentContext$CSharpParser.TypeofExpressionContext#CSharpParser.Boolean_literalContextCSharpParser.If_bodyContext7CSharpPreprocessorParser.PreprocessorDeclarationContext&CSharpParser.Parameter_modifierContext%CSharpParser.Query_body_clauseContext!CSharpParser.LockStatementContext"CSharpParser.Rank_specifierContext&CSharpParser.Primary_expressionContext(parsers.java.JavaParser.StatementContextCSharpParser.Right_arrowContext'CSharpParser.UncheckedExpressionContext+CSharpParser.Extern_alias_directivesContext#CSharpParser.Predefined_typeContext'CSharpParser.Assignment_operatorContext(CSharpParser.Variable_declaratorsContext+CSharpParser.Global_attribute_targetContext6CSharpParser.Interpolated_verbatium_string_partContextCSharpParser.Array_typeContext$CSharpParser.Range_expressionContextCSharpParser.IfStatementContext>CSharpParser.Implicit_anonymous_function_parameter_listContext.CSharpParser.Type_parameter_constraintsContextCSharpParser.Type_ContextCSharpParser*CSharpParser.Namespace_or_type_nameContext0CSharpParser.Anonymous_object_initializerContext$CSharpParser.Attribute_targetContext0parsers.java.JavaParser.MethodDeclarationContext4CSharpPreprocessorParser.PreprocessorNullableContext)CSharpParser.Local_function_headerContext>CSharpParser.Explicit_anonymous_function_parameter_listContext%CSharpParser.TheEmptyStatementContext&CSharpParser.Method_member_nameContext*CSharpParser.Extern_alias_directiveContext$CSharpParser.Fixed_parametersContext#CSharpParser.Arg_declarationContextCSharpParser.KeywordContext%CSharpParser.Struct_interfacesContext&CSharpParser.Method_declarationContext0CSharpParser.Fixed_size_buffer_declaratorContext!CSharpParser.Tuple_elementContext+CSharpParser.Enum_member_declarationContext(CSharpParser.UsingStaticDirectiveContext#CSharpParser.Parameter_arrayContext$CSharpParser.Type_declarationContext7CSharpPreprocessorParser.PreprocessorConditionalContext$CSharpParser.Compilation_unitContext(CSharpParser.General_catch_clauseContext'CSharpParser.All_member_modifierContextCSharpParser.Member_nameContext7CSharpPreprocessorParser.Preprocessor_expressionContextCSharpPreprocessorParserBase"CSharpParser.Finally_clauseContext5CSharpParser.Type_parameter_constraints_clauseContext%CSharpParser.Labeled_StatementContext!CSharpParser.GotoStatementContext-CSharpParser.Class_member_declarationsContext,CSharpParser.Add_accessor_declarationContext"CSharpParser.Type_parameterContext(CSharpParser.BaseAccessExpressionContext%CSharpParser.Attribute_sectionContext+CSharpParser.ThisReferenceExpressionContext%CSharpParser.ContinueStatementContext.CSharpParser.Local_constant_declarationContextCSharpParser.From_clauseContextCSharpParser.StatementContext'CSharpParser.Interface_accessorsContext.CSharpParser.Local_function_declarationContext-CSharpParser.Non_assignment_expressionContext&cross.language.parser.FileParserCSharp/cross.language.parser.FileParserCSharp.Listener5parsers.csharp.CSharpParser.Method_declarationContext/parsers.csharp.CSharpParser.Numeric_typeContext6parsers.csharp.CSharpParser.Additive_expressionContext.parsers.csharp.CSharpParser.IfStatementContext<parsers.csharp.CSharpParser.Simple_embedded_statementContext8parsers.csharp.CSharpParser.Relational_expressionContext0parsers.csharp.CSharpParser.Integral_typeContext<parsers.csharp.CSharpParser.Conditional_or_expressionContext3parsers.csharp.CSharpParser.Shift_expressionContext8parsers.csharp.CSharpParser.Formal_parameter_listContext-parsers.csharp.CSharpParser.Class_typeContextparsers.csharp.CSharpParser6parsers.csharp.CSharpParser.Floating_point_typeContext(parsers.csharp.CSharpParser.Type_Context3parsers.csharp.CSharpParser.Unary_expressionContext,parsers.csharp.CSharpParser.Base_typeContext.parsers.csharp.CSharpParser.Simple_typeContext6parsers.csharp.CSharpParser.Equality_expressionContext5parsers.csharp.CSharpParser.Method_member_nameContextparsers.csharp.CSharpParserBase=parsers.csharp.CSharpParser.Conditional_and_expressionContext<parsers.csharp.CSharpParser.Multiplicative_expressionContext'parsers.csharp.CSharpParserBaseListener#parsers.csharp.CSharpParserListener                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            