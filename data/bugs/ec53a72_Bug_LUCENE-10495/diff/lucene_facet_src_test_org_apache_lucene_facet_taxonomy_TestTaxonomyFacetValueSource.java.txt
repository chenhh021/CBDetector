diff --git a/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetValueSource.java b/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetValueSource.java
index 34cc0da..3e5689e 100644
--- a/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetValueSource.java
+++ b/lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetValueSource.java
@@ -501,6 +501,56 @@
     IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);
   }
 
+  // LUCENE-10495
+  public void testSiblingsLoaded() throws Exception {
+    Directory indexDir = newDirectory();
+    Directory taxoDir = newDirectory();
+
+    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);
+    IndexWriter iw = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));
+    FacetsConfig config = new FacetsConfig();
+
+    config.setHierarchical("a", true);
+    config.setMultiValued("a", true);
+    config.setRequireDimCount("a", true);
+
+    Document doc = new Document();
+    doc.add(new FacetField("a", Integer.toString(2), "1"));
+    iw.addDocument(config.build(taxoWriter, doc));
+
+    DirectoryReader r = DirectoryReader.open(iw);
+    DirectoryTaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);
+
+    FacetsCollector sfc =
+        newSearcher(r).search(new MatchAllDocsQuery(), new FacetsCollectorManager());
+
+    // Test MAX:
+    Facets facets =
+        new TaxonomyFacetFloatAssociations(
+            taxoReader,
+            config,
+            sfc,
+            AssociationAggregationFunction.MAX,
+            DoubleValuesSource.fromLongField("price"));
+
+    assertTrue(((TaxonomyFacets) facets).childrenLoaded());
+    assertFalse(((TaxonomyFacets) facets).siblingsLoaded());
+
+    // Test SUM:
+    facets =
+        new TaxonomyFacetFloatAssociations(
+            taxoReader,
+            config,
+            sfc,
+            AssociationAggregationFunction.SUM,
+            DoubleValuesSource.fromLongField("price"));
+    assertTrue(((TaxonomyFacets) facets).childrenLoaded());
+    assertFalse(((TaxonomyFacets) facets).siblingsLoaded());
+
+    iw.close();
+    IOUtils.close(taxoWriter, taxoReader, taxoDir, r, indexDir);
+  }
+
   public void testCountAndSumScore() throws Exception {
     Directory indexDir = newDirectory();
     Directory taxoDir = newDirectory();
