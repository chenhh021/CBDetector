diff --git a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer.java b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer.java
index 1cda86d..2e7cc61 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/search/AssertingBulkScorer.java
@@ -73,29 +73,15 @@
   }
 
   @Override
-  public int score(LeafCollector collector, Bits acceptDocs, final int min, final int max)
+  public int score(LeafCollector collector, Bits acceptDocs, int min, final int max)
       throws IOException {
     assert min >= this.max
         : "Scoring backward: min=" + min + " while previous max was max=" + this.max;
     assert min <= max : "max must be greater than min, got min=" + min + ", and max=" + max;
     this.max = max;
     collector = new AssertingLeafCollector(collector, min, max);
-    int next = min;
-    while (next < max) {
-      final int upTo;
-      if (random.nextBoolean()) {
-        upTo = max;
-      } else {
-        final long interval;
-        if (random.nextInt(100) <= 5) {
-          interval = 1 + random.nextInt(10);
-        } else {
-          interval = 1 + random.nextInt(random.nextBoolean() ? 100 : 5000);
-        }
-        upTo = Math.toIntExact(Math.min(next + interval, max));
-      }
-      next = in.score(new AssertingLeafCollector(collector, next, upTo), acceptDocs, next, upTo);
-    }
+    final int next = in.score(collector, acceptDocs, min, max);
+    assert next >= max;
     if (max >= maxDoc || next >= maxDoc) {
       assert next == DocIdSetIterator.NO_MORE_DOCS;
       return DocIdSetIterator.NO_MORE_DOCS;
