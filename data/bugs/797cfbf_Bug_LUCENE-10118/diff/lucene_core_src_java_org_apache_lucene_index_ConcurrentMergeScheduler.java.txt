diff --git a/lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java b/lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java
index 4500d5c..d4acf03 100644
--- a/lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java
+++ b/lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler.java
@@ -691,15 +691,30 @@
     public void run() {
       try {
         if (verbose()) {
-          message("  merge thread: start");
+          message(String.format(Locale.ROOT, "merge thread %s start", this.getName()));
         }
 
         doMerge(mergeSource, merge);
+        if (verbose()) {
+          message(
+              String.format(
+                  Locale.ROOT,
+                  "merge thread %s merge segment [%s] done estSize=%.1f MB (written=%.1f MB) runTime=%.1fs (stopped=%.1fs, paused=%.1fs) rate=%s",
+                  this.getName(),
+                  getSegmentName(merge),
+                  bytesToMB(merge.estimatedMergeBytes),
+                  bytesToMB(rateLimiter.getTotalBytesWritten()),
+                  nsToSec(System.nanoTime() - merge.mergeStartNS),
+                  nsToSec(rateLimiter.getTotalStoppedNS()),
+                  nsToSec(rateLimiter.getTotalPausedNS()),
+                  rateToString(rateLimiter.getMBPerSec())));
+        }
+
+        runOnMergeFinished(mergeSource);
 
         if (verbose()) {
-          message("  merge thread: done");
+          message(String.format(Locale.ROOT, "merge thread %s end", this.getName()));
         }
-        runOnMergeFinished(mergeSource);
       } catch (Throwable exc) {
         if (exc instanceof MergePolicy.MergeAbortedException) {
           // OK to ignore
@@ -878,4 +893,8 @@
   private static double bytesToMB(long bytes) {
     return bytes / 1024. / 1024.;
   }
+
+  private static String getSegmentName(MergePolicy.OneMerge merge) {
+    return merge.info != null ? merge.info.info.name : "_na_";
+  }
 }
