diff --git a/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/TestGeoBBox.java b/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/TestGeoBBox.java
index f7d2bd6..529b1a3 100755
--- a/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/TestGeoBBox.java
+++ b/lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/TestGeoBBox.java
@@ -18,6 +18,7 @@
 
 import java.util.ArrayList;
 import java.util.List;
+import org.apache.lucene.tests.geo.GeoTestUtil;
 import org.apache.lucene.tests.util.LuceneTestCase;
 import org.junit.Test;
 
@@ -480,4 +481,51 @@
     // solid="+solid);
     assertTrue(box.isWithin(point) == solid.isWithin(point));
   }
+
+  @Test
+  public void testLUCENE10508() {
+    double minX = Geo3DUtil.fromDegrees(GeoTestUtil.nextLongitude());
+    double maxX = Geo3DUtil.fromDegrees(GeoTestUtil.nextLongitude());
+    double minY = -Math.PI * 0.5;
+    double maxY = -Math.PI * 0.5 + 1e-8;
+    assertNotNull(GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE, maxY, minY, minX, maxX));
+  }
+
+  @Test
+  public void testBBoxRandomDegenerate() {
+    for (int i = 0; i < 100; i++) {
+      double minX = Geo3DUtil.fromDegrees(GeoTestUtil.nextLongitude());
+      double maxX = Math.nextUp(minX + i * Vector.MINIMUM_ANGULAR_RESOLUTION);
+      double minY = Geo3DUtil.fromDegrees(GeoTestUtil.nextLatitude());
+      double maxY = Math.nextUp(minY + i * Vector.MINIMUM_ANGULAR_RESOLUTION);
+      assertNotNull(GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE, maxY, minY, minX, maxX));
+    }
+  }
+
+  @Test
+  public void testBBoxRandomLatDegenerate() {
+    for (int i = 0; i < 100; i++) {
+      double minX = Geo3DUtil.fromDegrees(GeoTestUtil.nextLongitude());
+      double maxX = Geo3DUtil.fromDegrees(GeoTestUtil.nextLongitude());
+      double minY = Geo3DUtil.fromDegrees(GeoTestUtil.nextLatitude());
+      double maxY = Math.nextUp(minY + i * Vector.MINIMUM_ANGULAR_RESOLUTION);
+      assertNotNull(GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE, maxY, minY, minX, maxX));
+    }
+  }
+
+  @Test
+  public void testBBoxRandomLonDegenerate() {
+    for (int i = 0; i < 100; i++) {
+      double minX = Geo3DUtil.fromDegrees(GeoTestUtil.nextLongitude());
+      double maxX = Math.nextUp(minX + i * Vector.MINIMUM_ANGULAR_RESOLUTION);
+      double minY = Geo3DUtil.fromDegrees(GeoTestUtil.nextLatitude());
+      double maxY = Geo3DUtil.fromDegrees(GeoTestUtil.nextLatitude());
+      if (minY > maxY) {
+        double temp = minY;
+        minY = maxY;
+        maxY = temp;
+      }
+      assertNotNull(GeoAreaFactory.makeGeoArea(PlanetModel.SPHERE, maxY, minY, minX, maxX));
+    }
+  }
 }
