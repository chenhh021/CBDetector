diff --git a/lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets.java b/lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets.java
index 59fc41e..71b2b64 100644
--- a/lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets.java
+++ b/lucene/facet/src/test/org/apache/lucene/facet/sortedset/TestSortedSetDocValuesFacets.java
@@ -28,6 +28,7 @@
 import java.util.concurrent.TimeUnit;
 import org.apache.lucene.document.Document;
 import org.apache.lucene.document.Field;
+import org.apache.lucene.document.StringField;
 import org.apache.lucene.facet.DrillDownQuery;
 import org.apache.lucene.facet.FacetResult;
 import org.apache.lucene.facet.FacetTestCase;
@@ -106,6 +107,58 @@
     IOUtils.close(searcher.getIndexReader(), dir);
   }
 
+  // See: LUCENE-10070
+  public void testCountAll() throws Exception {
+    Directory dir = newDirectory();
+
+    FacetsConfig config = new FacetsConfig();
+    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);
+
+    Document doc = new Document();
+    doc.add(new StringField("id", "0", Field.Store.NO));
+    doc.add(new SortedSetDocValuesFacetField("a", "foo"));
+    writer.addDocument(config.build(doc));
+
+    doc = new Document();
+    doc.add(new StringField("id", "1", Field.Store.NO));
+    doc.add(new SortedSetDocValuesFacetField("a", "bar"));
+    writer.addDocument(config.build(doc));
+
+    writer.deleteDocuments(new Term("id", "0"));
+
+    // NRT open
+    IndexSearcher searcher = newSearcher(writer.getReader());
+
+    // Per-top-reader state:
+    SortedSetDocValuesReaderState state =
+        new DefaultSortedSetDocValuesReaderState(searcher.getIndexReader());
+
+    Facets facets = new SortedSetDocValuesFacetCounts(state);
+
+    assertEquals(
+        "dim=a path=[] value=1 childCount=1\n  bar (1)\n",
+        facets.getTopChildren(10, "a").toString());
+
+    ExecutorService exec =
+        new ThreadPoolExecutor(
+            1,
+            TestUtil.nextInt(random(), 2, 6),
+            Long.MAX_VALUE,
+            TimeUnit.MILLISECONDS,
+            new LinkedBlockingQueue<Runnable>(),
+            new NamedThreadFactory("TestIndexSearcher"));
+
+    facets = new ConcurrentSortedSetDocValuesFacetCounts(state, exec);
+
+    assertEquals(
+        "dim=a path=[] value=1 childCount=1\n  bar (1)\n",
+        facets.getTopChildren(10, "a").toString());
+
+    writer.close();
+    IOUtils.close(searcher.getIndexReader(), dir);
+    exec.shutdownNow();
+  }
+
   public void testBasicSingleValued() throws Exception {
     Directory dir = newDirectory();
 
