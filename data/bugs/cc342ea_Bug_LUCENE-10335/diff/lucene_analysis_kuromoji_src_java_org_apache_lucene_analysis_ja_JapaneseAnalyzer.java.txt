diff --git a/lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseAnalyzer.java b/lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseAnalyzer.java
index 0ad2b6e..8c79a2d 100644
--- a/lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseAnalyzer.java
+++ b/lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseAnalyzer.java
@@ -19,6 +19,7 @@
 import java.io.IOException;
 import java.io.Reader;
 import java.io.UncheckedIOException;
+import java.nio.charset.StandardCharsets;
 import java.util.HashSet;
 import java.util.Set;
 import org.apache.lucene.analysis.CharArraySet;
@@ -27,9 +28,11 @@
 import org.apache.lucene.analysis.StopwordAnalyzerBase;
 import org.apache.lucene.analysis.TokenStream;
 import org.apache.lucene.analysis.Tokenizer;
+import org.apache.lucene.analysis.WordlistLoader;
 import org.apache.lucene.analysis.cjk.CJKWidthCharFilter;
 import org.apache.lucene.analysis.ja.JapaneseTokenizer.Mode;
 import org.apache.lucene.analysis.ja.dict.UserDictionary;
+import org.apache.lucene.util.IOUtils;
 
 /**
  * Analyzer for Japanese that uses morphological analysis.
@@ -77,9 +80,19 @@
     static {
       try {
         DEFAULT_STOP_SET =
-            loadStopwordSet(true, JapaneseAnalyzer.class, "stopwords.txt", "#"); // ignore case
+            WordlistLoader.getWordSet(
+                IOUtils.getDecodingReader(
+                    IOUtils.requireResourceNonNull(
+                        JapaneseAnalyzer.class.getResourceAsStream("stopwords.txt"),
+                        "stopwords.txt"),
+                    StandardCharsets.UTF_8),
+                "#",
+                new CharArraySet(16, true)); // ignore case
         final CharArraySet tagset =
-            loadStopwordSet(false, JapaneseAnalyzer.class, "stoptags.txt", "#");
+            WordlistLoader.getWordSet(
+                IOUtils.requireResourceNonNull(
+                    JapaneseAnalyzer.class.getResourceAsStream("stoptags.txt"), "stoptags.txt"),
+                "#");
         DEFAULT_STOP_TAGS = new HashSet<>();
         for (Object element : tagset) {
           char[] chars = (char[]) element;
