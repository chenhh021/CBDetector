diff --git a/lucene/test-framework/src/java/org/apache/lucene/tests/util/LuceneTestCase.java b/lucene/test-framework/src/java/org/apache/lucene/tests/util/LuceneTestCase.java
index 406d4c5..48032cd 100644
--- a/lucene/test-framework/src/java/org/apache/lucene/tests/util/LuceneTestCase.java
+++ b/lucene/test-framework/src/java/org/apache/lucene/tests/util/LuceneTestCase.java
@@ -62,6 +62,7 @@
 import java.lang.reflect.Constructor;
 import java.lang.reflect.Method;
 import java.net.URI;
+import java.net.URISyntaxException;
 import java.nio.charset.StandardCharsets;
 import java.nio.file.FileSystem;
 import java.nio.file.NoSuchFileException;
@@ -151,6 +152,7 @@
 import org.apache.lucene.util.BytesRef;
 import org.apache.lucene.util.CommandLineUtil;
 import org.apache.lucene.util.Constants;
+import org.apache.lucene.util.IOUtils;
 import org.apache.lucene.util.InfoStream;
 import org.apache.lucene.util.NamedThreadFactory;
 import org.apache.lucene.util.SuppressForbidden;
@@ -2054,19 +2056,16 @@
    */
   protected Path getDataPath(String name) throws IOException {
     try {
-      return Paths.get(this.getClass().getResource(name).toURI());
-    } catch (Exception e) {
-      throw new IOException("Cannot find resource: " + name, e);
+      return Paths.get(
+          IOUtils.requireResourceNonNull(this.getClass().getResource(name), name).toURI());
+    } catch (URISyntaxException e) {
+      throw new AssertionError(e);
     }
   }
 
   /** Gets a resource from the test's classpath as {@link InputStream}. */
   protected InputStream getDataInputStream(String name) throws IOException {
-    InputStream in = this.getClass().getResourceAsStream(name);
-    if (in == null) {
-      throw new IOException("Cannot find resource: " + name);
-    }
-    return in;
+    return IOUtils.requireResourceNonNull(this.getClass().getResourceAsStream(name), name);
   }
 
   public void assertReaderEquals(String info, IndexReader leftReader, IndexReader rightReader)
