diff --git a/lucene/core/src/java/org/apache/lucene/util/ClasspathResourceLoader.java b/lucene/core/src/java/org/apache/lucene/util/ClasspathResourceLoader.java
index 7bf607f..5dc4b88 100644
--- a/lucene/core/src/java/org/apache/lucene/util/ClasspathResourceLoader.java
+++ b/lucene/core/src/java/org/apache/lucene/util/ClasspathResourceLoader.java
@@ -22,6 +22,13 @@
 /**
  * Simple {@link ResourceLoader} that uses {@link ClassLoader#getResourceAsStream(String)} and
  * {@link Class#forName(String,boolean,ClassLoader)} to open resources and classes, respectively.
+ *
+ * <p>To use this class with the Java Module System, you must open all modules on classpath that
+ * contain resources to the {@code org.apache.lucene.core} module, otherwise resources can't be
+ * looked up. It is recommended to use {@link ModuleResourceLoader} for such use cases as this would
+ * limit to certain modules.
+ *
+ * @see ModuleResourceLoader
  */
 public final class ClasspathResourceLoader implements ResourceLoader {
   private final Class<?> clazz;
@@ -54,7 +61,12 @@
         (clazz != null)
             ? clazz.getResourceAsStream(resource)
             : loader.getResourceAsStream(resource);
-    if (stream == null) throw new IOException("Resource not found: " + resource);
+    if (stream == null) {
+      throw new IOException(
+          "Resource not found (if you use Java Module System, make sure to open "
+              + "module and package containing resources to 'org.apache.lucene.core' module): "
+              + resource);
+    }
     return stream;
   }
 
@@ -66,14 +78,4 @@
       throw new RuntimeException("Cannot load class: " + cname, e);
     }
   }
-
-  @Override
-  public <T> T newInstance(String cname, Class<T> expectedType) {
-    Class<? extends T> clazz = findClass(cname, expectedType);
-    try {
-      return clazz.getConstructor().newInstance();
-    } catch (Exception e) {
-      throw new RuntimeException("Cannot create instance: " + cname, e);
-    }
-  }
 }
