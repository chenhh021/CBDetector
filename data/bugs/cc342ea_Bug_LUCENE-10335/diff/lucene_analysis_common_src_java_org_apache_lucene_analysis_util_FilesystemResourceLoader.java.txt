diff --git a/lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader.java b/lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader.java
index 6024f6d..7b39e79 100644
--- a/lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader.java
+++ b/lucene/analysis/common/src/java/org/apache/lucene/analysis/util/FilesystemResourceLoader.java
@@ -22,7 +22,9 @@
 import java.nio.file.Files;
 import java.nio.file.NoSuchFileException;
 import java.nio.file.Path;
+import java.util.Objects;
 import org.apache.lucene.util.ClasspathResourceLoader;
+import org.apache.lucene.util.ModuleResourceLoader;
 import org.apache.lucene.util.ResourceLoader;
 
 /**
@@ -41,24 +43,36 @@
   private final ResourceLoader delegate;
 
   /**
-   * Creates a resource loader that resolves resources against the given base directory (may be
-   * {@code null} to refer to CWD). Files not found in file system and class lookups are delegated
-   * to context classloader.
+   * Creates a resource loader that resolves resources against the given base directory. Files not
+   * found in file system and class lookups are delegated to {@link ClassLoader}.
+   *
+   * <p>To use this constructor with the Java Module System, you must open all modules that contain
+   * resources to the {@code org.apache.lucene.core} module, otherwise resources can't be looked up.
+   * It is recommended to use {@link #FilesystemResourceLoader(Path, Module)} for such use cases as
+   * this would limit to certain modules.
    */
   public FilesystemResourceLoader(Path baseDirectory, ClassLoader delegate) {
     this(baseDirectory, new ClasspathResourceLoader(delegate));
   }
 
   /**
-   * Creates a resource loader that resolves resources against the given base directory (may be
-   * {@code null} to refer to CWD). Files not found in file system and class lookups are delegated
-   * to the given delegate {@link ResourceLoader}.
+   * Creates a resource loader that resolves resources against the given base directory. Files not
+   * found in file system and class lookups are delegated to {@link ModuleResourceLoader}.
+   *
+   * <p>To use this constructor, you must open the module to the {@code org.apache.lucene.core}
+   * module, otherwise resources can't be looked up.
+   */
+  public FilesystemResourceLoader(Path baseDirectory, Module delegate) {
+    this(baseDirectory, new ModuleResourceLoader(delegate));
+  }
+
+  /**
+   * Creates a resource loader that resolves resources against the given base directory. Files not
+   * found in file system and class lookups are delegated to the given delegate {@link
+   * ResourceLoader}.
    */
   public FilesystemResourceLoader(Path baseDirectory, ResourceLoader delegate) {
-    if (baseDirectory == null) {
-      throw new NullPointerException();
-    }
-    if (!Files.isDirectory(baseDirectory))
+    if (!Files.isDirectory(Objects.requireNonNull(baseDirectory)))
       throw new IllegalArgumentException(baseDirectory + " is not a directory");
     if (delegate == null)
       throw new IllegalArgumentException("delegate ResourceLoader may not be null");
